@{
    Layout = null;
    var now = DateTime.Now.ToString("dd-MM-yyyy hh:mm tt");
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Counter Sale</title>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            margin: 0;
            background: #f0f0f0;
            padding-bottom: 180px;
        }

        .header {
            background-color: #009999;
            color: white;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            font-size: 18px;
        }

        .nav-row {
            background-color: white;
            color: #009999;
            font-weight: bold;
            padding: 10px 0;
            display: grid;
            grid-template-columns: 1fr 3fr 2fr 1fr 1fr 1fr 1fr;
            text-align: center;
            border-bottom: 1px solid #ccc;
        }

        .row {
            display: grid;
            grid-template-columns: 1fr 3fr 2fr 1fr 1fr 1fr 1fr;
            text-align: center;
        }

        .row input {
            border: none;
            padding: 10px;
            text-align: center;
            font-size: 15px;
            width: 100%;
            box-sizing: border-box;
        }

        .default-row {
            background-color: #009999;
        }

        .default-row input {
            background: #009999;
            color: white;
        }

        .srno-filled {
            background-color: white !important;
            color: green !important;
            font-weight: bold;
        }

        input:focus {
            outline: 2px solid #007bff;
        }

        .footer-bar {
            background-color: #009999;
            color: white;
            display: flex;
            justify-content: flex-start;
            padding: 12px 20px;
            font-size: 16px;
            position: fixed;
            bottom: 90px;
            width: 100%;
            z-index: 10;
        }

        .shortcuts {
            font-family: monospace;
        }

        .total-box {
            position: fixed;
            bottom: 0;
            width: 100%;
            height: 90px;
            background-color: white;
            color: black;
            padding: 25px 20px;
            font-size: 22px;
            font-weight: bold;
            border-top: 1px solid #ccc;
            display: flex;
            align-items: center;
            justify-content: flex-end;
            box-sizing: border-box;
            z-index: 9;
        }

        .total-box .label {
            margin-right: 10px;
            color: #009999;
        }

        .total-box span#totalAmount {
            max-width: 200px;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }

        /* --- MODAL --- */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.4);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
    width: 96%;
    height: 80vh;
    max-width: 1400px;
    background: white;
    border-radius: 8px;
    overflow-y: auto;
    padding: 20px;
    margin: 5vh auto;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
}

        .selected-row .sn::before {
            content: "✓ ";
            color: green;
            font-weight: bold;
        }

        .selected-row {
            background-color: #eaffea !important;
        }


        #selectedTotalBox {
            position: fixed;
            bottom: 90px;
            right: 20px;
            background: #fff;
            color: #009999;
            font-size: 18px;
            font-weight: bold;
            padding: 8px 16px;
            border: 1px solid #ccc;
            border-radius: 6px;
            box-shadow: 0 0 8px rgba(0,0,0,0.1);
            z-index: 10;
        }


.modal-row.selected {
    background-color: #009999;
    color: white;
    font-weight: bold;
}

        .modal-header {
            background: #009999;
            color: white;
            padding: 10px 20px;
            font-size: 18px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-table-header, .modal-row {
            display: grid;
            grid-template-columns: 1fr 4fr 2fr 1fr 1fr 2fr;
            padding: 10px;
            text-align: center;
        }

        .modal-table-header {
            background: #ffffff;
            color: #009999;
            font-weight: bold;
            border-bottom: 1px solid #ccc;
        }

        .modal-row {
            background: #e0f7f7;
            border-bottom: 1px solid #ccc;
        }

        .modal-row:hover {
            background: #d0f0f0;
            cursor: pointer;
        }

        .selected-billing-row {
            background-color: #009999 !important;
        }

            .selected-billing-row input {
                background-color: #009999 !important;
                color: white !important;
            }

        .modal-close {
            background: white;
            border: none;
            color: #009999;
            font-weight: bold;
            font-size: 16px;
            cursor: pointer;
            padding: 5px 10px;
            border-radius: 5px;
        }

        .modal-close:hover {
            background: #eee;
        }
    </style>
</head>
<body>

    <div class="header">
        <div>Counter Sale [Multi Customers]</div>
        <div>@now</div>
    </div>

    <div class="nav-row">
        <div>Customer</div>
        <div>Item Description</div>
        <div>Batch</div>
        <div>STRI</div>
        <div>MRP</div>
        <div>Discount</div>
        <div>Amount</div>
    </div>

    <form method="post" id="saleForm">
        <div id="rowsContainer">
            <div class="row " id="row-1">
                <div class="sn"> </div>
                <input type="text" class="item" placeholder="Enter item">
                <input type="text" class="batch" placeholder="Batch">
                <input type="text" class="strip" placeholder="Strip">
                <input type="number" class="mrp" placeholder="0.00">
                <input type="number" class="disc" placeholder="0%">
                <input type="number" class="amt" placeholder="0.00" readonly>
            </div>

        </div>
    </form>

    <div class="footer-bar">
        <div class="shortcuts">
            F1:Help&nbsp;&nbsp;&nbsp;F2:Sale&nbsp;&nbsp;&nbsp;F3:Less&nbsp;&nbsp;&nbsp;F4:Purc&nbsp;&nbsp;&nbsp;F5:Add&nbsp;&nbsp;&nbsp;F10:Bill
        </div>
    </div>

    <div class="total-box">
        <span class="label">Total:</span>
        ₹<span id="totalAmount">0.00</span>
    </div>

    <!-- MODAL -->
    <div id="stockModal" class="modal-overlay">
        <div class="modal-content">
            <div class="modal-header">
                <div>Stock View</div>
                <button class="modal-close" onclick="closeModal()">Close</button>
            </div>
            <div class="modal-table-header">
                <div>Sr No</div>
                <div>Item Name</div>
                <div>Batch</div>
                <div>Qty</div>
                <div>MRP</div>
                <div>Expiry</div>
            </div>
            <div class="modal-row">
                <div>1</div>
                <div>Paracetamol 500mg</div>
                <div>A123</div>
                <div>120</div>
                <div>₹12.00</div>
                <div>12/2025</div>
            </div>
            <div class="modal-row">
                <div>2</div>
                <div>Azithromycin 250mg</div>
                <div>B456</div>
                <div>50</div>
                <div>₹25.00</div>
                <div>11/2024</div>
            </div>
        </div>
    </div>

    <script>
        let selectedRowIndex = 0;
        let activeRow = null;
        let modalVisible = false;

        window.onload = function () {
            const billingRow = document.querySelector("#row-1");
            setupRowEvents(billingRow);
            billingRow.querySelector(".item").focus();

            document.querySelectorAll("#stockModal .modal-row").forEach((row, index) => {
                row.addEventListener("click", () => highlightRow(index));
            });
        };

        function setupRowEvents(row) {
            const inputs = row.querySelectorAll("input");

            inputs.forEach(input => {
                input.addEventListener("focus", () => {
                    document.querySelectorAll(".row").forEach(r => r.classList.remove("selected-billing-row"));
                    row.classList.add("selected-billing-row");
                });

                input.addEventListener("keypress", function (e) {
                    if (e.key === "+" || e.key === "-") e.preventDefault();
                });
            });

            inputs.forEach((input, index) => {
                input.addEventListener("keydown", function (e) {
                    if (modalVisible) return;

                    const allRows = document.querySelectorAll(".row");
                    const currentRowIndex = Array.from(allRows).indexOf(row);

                    // Arrow key navigation
                    if (e.key === "ArrowUp" || e.key === "ArrowDown") {
                        e.preventDefault();
                        const newIndex = e.key === "ArrowUp" ? currentRowIndex - 1 : currentRowIndex + 1;
                        if (allRows[newIndex]) {
                            allRows[newIndex].querySelector(".item").focus();
                        }
                        return;
                    }

                    // Enter logic
                    if (e.key === "Enter") {
                        e.preventDefault();

                        const strip = row.querySelector(".strip");
                        const disc = row.querySelector(".disc");
                        const mrp = row.querySelector(".mrp");

                        if (input.classList.contains("item")) {
                            activeRow = row;
                            setTimeout(() => openModal(), 10);
                            return;
                        }

                        if (input.classList.contains("strip") && strip.value.trim() === "") return;

                        if (input.classList.contains("disc")) {
                            const stripValue = parseFloat(strip.value) || 0;
                            const mrpValue = parseFloat(mrp.value) || 0;
                            const discValue = parseFloat(input.value) || 0;

                            if (stripValue === 0 || mrpValue === 0) return;

                            const total = stripValue * mrpValue;
                            const discountAmount = (discValue / 100) * total;
                            const finalAmount = total - discountAmount;

                            row.querySelector(".amt").value = finalAmount.toFixed(2);
                            updateTotal();

                            const nextRow = createOrGetRow(currentRowIndex + 1);
                            nextRow.querySelector(".item").focus();
                            return;
                        }

                        const next = inputs[index + 1];
                        if (next) next.focus();
                    }
                });

                if (input.classList.contains("amt")) {
                    input.setAttribute("readonly", true);
                    input.addEventListener("input", updateTotal);
                }
            });
        }

        function updateTotal() {
            let total = 0;
            document.querySelectorAll('.amt').forEach(input => {
                const value = parseFloat(input.value) || 0;
                total += value;
            });
            document.getElementById('totalAmount').textContent = total.toFixed(2);
        }

        function updateSelectedTotal() {
            let selectedTotal = 0;
            document.querySelectorAll(".selected-row .amt").forEach(input => {
                const val = parseFloat(input.value) || 0;
                selectedTotal += val;
            });
            document.getElementById("selectedTotal").textContent = selectedTotal.toFixed(2);
        }

        function openModal() {
            modalVisible = true;
            document.getElementById("stockModal").style.display = "flex";
            highlightRow(0);
            selectedRowIndex = 0;
        }

        function closeModal() {
            modalVisible = false;
            document.getElementById("stockModal").style.display = "none";
        }

        function highlightRow(index) {
            const rows = document.querySelectorAll("#stockModal .modal-row");
            rows.forEach(row => row.classList.remove("selected"));
            if (rows[index]) {
                rows[index].classList.add("selected");
                rows[index].scrollIntoView({ block: "nearest" });
                selectedRowIndex = index;
            }
        }

        function processSelectedRow() {
            const rows = document.querySelectorAll("#stockModal .modal-row");
            const row = rows[selectedRowIndex];
            if (!row || !activeRow) return;

            const cols = row.querySelectorAll("div");
            const itemName = cols[1]?.innerText.trim();
            const batch = cols[2]?.innerText.trim();
            const mrp = cols[4]?.innerText.replace("₹", "").trim();

            const sn = activeRow.querySelector(".sn");
            const item = activeRow.querySelector(".item");
            const batchField = activeRow.querySelector(".batch");
            const mrpField = activeRow.querySelector(".mrp");
            const amt = activeRow.querySelector(".amt");
            const strip = activeRow.querySelector(".strip");

            const allBillingRows = document.querySelectorAll('.row');
            const billingRowIndex = Array.from(allBillingRows).indexOf(activeRow);
            sn.textContent = billingRowIndex + 1;
            sn.classList.add("srno-filled");

            item.value = itemName;
            batchField.value = batch;
            mrpField.value = mrp;
            amt.value = "";

            closeModal();
            if (strip) strip.focus();
        }

        function createOrGetRow(index) {
            let rows = document.querySelectorAll('.row');
            if (rows[index]) return rows[index];

            const lastRow = rows[rows.length - 1];
            const newRow = lastRow.cloneNode(true);

            newRow.querySelectorAll('input').forEach(input => {
                input.value = '';
            });

            const snDiv = newRow.querySelector('.sn');
            if (snDiv) {
                snDiv.textContent = "";
                snDiv.classList.remove('srno-filled');
            }

            newRow.classList.remove("default-row", "selected-row", "selected-billing-row");
            newRow.id = `row-${index + 1}`;

            document.getElementById('rowsContainer').appendChild(newRow);
            setupRowEvents(newRow);
            return newRow;
        }

        // + / - row selection logic
        document.addEventListener("keydown", function (e) {
            if (modalVisible) return;

            const selectedBillingRow = document.querySelector(".selected-billing-row");
            if (!selectedBillingRow) return;

            if (e.key === "+" || e.key === "-") {
                e.preventDefault();

                const sn = selectedBillingRow.querySelector(".sn");

                if (e.key === "+") {
                    selectedBillingRow.classList.add("selected-row");
                    sn.classList.add("srno-filled");
                } else {
                    selectedBillingRow.classList.remove("selected-row");
                    sn.classList.remove("srno-filled");
                }

                updateSelectedTotal();

                // Move to next row
                const allRows = document.querySelectorAll(".row");
                const currentIndex = Array.from(allRows).indexOf(selectedBillingRow);
                const nextRow = allRows[currentIndex + 1];
                if (nextRow) {
                    nextRow.querySelector(".item").focus();
                }
            }
        });

        // Modal navigation
        document.addEventListener("keydown", function (e) {
            if (!modalVisible) return;

            const rows = document.querySelectorAll("#stockModal .modal-row");

            if (e.key === "ArrowDown") {
                e.preventDefault();
                if (selectedRowIndex < rows.length - 1) highlightRow(selectedRowIndex + 1);
            } else if (e.key === "ArrowUp") {
                e.preventDefault();
                if (selectedRowIndex > 0) highlightRow(selectedRowIndex - 1);
            } else if (e.key === "Enter") {
                e.preventDefault();
                processSelectedRow();
            } else if (e.key === "Escape") {
                e.preventDefault();
                closeModal();
            }
        });

        // F10 to open bill view
        document.addEventListener("keydown", function (e) {
            if (e.key === "F10") {
                e.preventDefault();

                const selectedRows = document.querySelectorAll(".selected-row");
                if (selectedRows.length === 0) {
                    alert("No rows selected to print.");
                    return;
                }

                // Redirect to printable bill view
                window.location.href = "/Sale/PrintBill";

            }
        });
    </script>




    <div id="selectedTotalBox">
        Selected Total: ₹<span id="selectedTotal">0.00</span>
    </div>


</body>
</html>